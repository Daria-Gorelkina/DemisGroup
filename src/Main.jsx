import { useEffect, useState } from "react";
import axios from "axios";


const Main = () => {
    const [news, setNews] = useState([]);

    const fetchData = async () => {
        try {
            const response = await axios.get("/mainnews.php");
            setNews(response.data);
        } catch (error) {
            console.error("Error fetching data:", error);
        }
    };

    useEffect(() => {
        fetchData();
    }, []);

    return (
        <div className="row">
                {news.map((n) => (
                    <div className="col-xs-12 col-md-4 p-2" key={n.id}>
                        <div className="serviceBox">
                            <div className="row row-for-svg">
                                <div className="col-9"><h3 className="title">{n.name}</h3></div>
                                <div className="col-3"><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" viewBox="0 0 42 42"><path d="M40.5212 1.47977C39.3511 0.30929 37.7441 -0.203144 36.1128 0.073434L34.2653 0.386785C34.2578 0.387772 34.2502 0.388924 34.2428 0.390158C28.3193 1.3952 22.9369 4.15086 18.6612 8.36213L7.35396 9.39456C6.28072 9.49254 5.27001 9.96623 4.50789 10.7283C2.7071 12.5291 2.7071 15.4592 4.50789 17.26L7.21033 19.9624C7.0954 20.205 7.03272 20.4712 7.03272 20.7476C7.03272 21.2382 7.22374 21.6996 7.57065 22.0464L9.62911 24.1048C8.71645 24.0988 7.8056 24.2431 6.93301 24.5384C6.61028 24.6476 6.43719 24.9978 6.54636 25.3206C6.63348 25.5778 6.87353 25.74 7.13078 25.74C7.19634 25.74 7.26306 25.7294 7.32863 25.7072C8.23964 25.399 9.1996 25.2836 10.1517 25.362C9.76921 25.5738 9.4153 25.8402 9.09841 26.1571L7.18236 28.0723C7.00302 28.2515 6.9516 28.522 7.05262 28.7545C7.15365 28.987 7.3895 29.1342 7.63976 29.1253L9.75539 29.0525L8.58672 32.5591C8.51284 32.7809 8.57059 33.0253 8.73578 33.1905C8.90106 33.3557 9.14563 33.4136 9.36717 33.3396L12.8738 32.1709L12.801 34.2866C12.7923 34.5399 12.9394 34.7728 13.1718 34.8737C13.251 34.9081 13.3346 34.9248 13.4175 34.9248C13.578 34.9248 13.7358 34.8622 13.854 34.744L15.7689 32.8283C16.0858 32.5118 16.3524 32.158 16.5644 31.7754C16.5799 31.9663 16.5881 32.1579 16.5881 32.3499C16.5881 34.2238 15.8589 35.9851 14.5346 37.3093L12.077 39.7664L12.2161 35.7432C12.2231 35.5413 12.1308 35.3487 11.9689 35.2277C11.8069 35.1068 11.5964 35.0726 11.4044 35.1365L4.48256 37.4438L6.78987 30.522C6.85371 30.3303 6.81973 30.1194 6.6988 29.9575C6.5777 29.7956 6.38487 29.7035 6.18316 29.7102L2.16011 29.8494L4.61797 27.391C4.84954 27.1594 5.09708 26.9441 5.35375 26.7511C5.62614 26.5463 5.68084 26.1595 5.476 25.8871C5.27132 25.6148 4.88443 25.56 4.61204 25.7649C4.30931 25.9925 4.01767 26.2461 3.74529 26.5185L0.180712 30.0839C0.00145424 30.2631 -0.0498797 30.5337 0.0512251 30.7662C0.152248 30.9986 0.383497 31.145 0.638439 31.1369L5.33845 30.9742L2.92173 38.2242C2.84785 38.4459 2.90552 38.6903 3.07079 38.8556C3.23606 39.0209 3.48039 39.0786 3.70227 39.0047L10.9523 36.588L10.7897 41.288C10.781 41.5413 10.9279 41.7741 11.1603 41.8751C11.2396 41.9096 11.3232 41.9263 11.4061 41.9263C11.5666 41.9263 11.7244 41.8637 11.8426 41.7456L15.4072 38.1818C16.9645 36.6244 17.8221 34.5532 17.8221 32.3497C17.8221 32.3321 17.8215 32.3145 17.8214 32.2969L19.9534 34.4289C20.3004 34.7758 20.7616 34.9668 21.2523 34.9668C21.5287 34.9668 21.7949 34.9042 22.0374 34.7892L24.74 37.4918C25.6124 38.3642 26.7722 38.8446 28.0059 38.8446C29.2396 38.8446 30.3994 38.3642 31.2717 37.4918C32.0338 36.7298 32.5074 35.7191 32.6054 34.6459L33.6379 23.3383C35.6953 21.2497 37.4218 18.8704 38.77 16.2609C39.6996 14.4589 40.4418 12.5582 40.9761 10.6114C41.0663 10.2829 40.873 9.94336 40.5444 9.85311C40.2152 9.76287 39.8764 9.95628 39.7861 10.2848C39.2971 12.0663 38.6244 13.8067 37.7889 15.4637L26.5302 4.2054C28.9965 2.96055 31.6506 2.08368 34.4295 1.61016C34.4369 1.60917 34.4444 1.6081 34.4517 1.60679L36.3191 1.29006C37.5516 1.08103 38.765 1.46833 39.6487 2.3522C40.5322 3.23598 40.9189 4.4494 40.7097 5.68166L40.3932 7.55049C40.3714 7.67784 40.3488 7.80428 40.3255 7.93081C40.2635 8.26588 40.485 8.5877 40.8201 8.64965C41.1548 8.71151 41.4769 8.49005 41.5389 8.15498C41.5632 8.02319 41.5868 7.8914 41.6096 7.75764L41.9263 5.88798C42.2033 4.25665 41.6911 2.64992 40.5212 1.47977V1.47977ZM5.38049 11.6008C5.93891 11.0424 6.67955 10.6953 7.46609 10.6235L17.2941 9.7261L8.00633 19.0132L5.38057 16.3874C4.06078 15.0677 4.06078 12.9205 5.38049 11.6008ZM14.8963 31.9556L14.088 32.7644L14.1375 31.3263C14.1445 31.1243 14.0521 30.9318 13.8902 30.8108C13.7284 30.6899 13.5177 30.6558 13.3259 30.7198L10.1475 31.779L11.2067 28.6007C11.2706 28.409 11.2366 28.1982 11.1157 28.0363C10.9946 27.8744 10.7987 27.7823 10.6002 27.789L9.16209 27.8385L9.97084 27.03C10.4329 26.5679 11.0011 26.2514 11.6278 26.1037L15.8235 30.2994C15.675 30.9263 15.3583 31.4943 14.8963 31.9556V31.9556ZM30.3991 36.6195C29.7598 37.2587 28.9098 37.6108 28.0058 37.6108C27.1018 37.6108 26.2518 37.2587 25.6125 36.6195L22.9865 33.9935L32.2739 24.7056L31.3765 34.5339C31.3047 35.3203 30.9575 36.061 30.3991 36.6195ZM37.1826 16.6029C35.9372 18.8104 34.4017 20.8332 32.6074 22.6267L21.6783 33.5565C21.4433 33.7916 21.0609 33.7916 20.8258 33.5565L8.44316 21.1739C8.20813 20.9388 8.20813 20.5564 8.44308 20.3213L19.3722 9.39308C21.1832 7.58208 23.2059 6.04717 25.3921 4.81244L37.1826 16.6029Z"></path><path d="M20.1154 21.8845C21.3511 23.1202 22.9941 23.8007 24.7417 23.8007C26.4891 23.8007 28.1322 23.1202 29.3679 21.8845C30.6036 20.6488 31.2841 19.0058 31.2841 17.2583C31.2841 15.5107 30.6036 13.8678 29.3679 12.632C28.1322 11.3963 26.4891 10.7158 24.7417 10.7158C22.9941 10.7158 21.3511 11.3963 20.1154 12.632C18.8797 13.8678 18.1992 15.5107 18.1992 17.2583C18.1992 19.0058 18.8797 20.6488 20.1154 21.8845V21.8845ZM20.988 13.5046C21.9907 12.502 23.3237 11.9498 24.7417 11.9498C26.1596 11.9498 27.4926 12.502 28.4953 13.5046C29.4979 14.5073 30.0501 15.8403 30.0501 17.2583C30.0501 18.6762 29.4979 20.0093 28.4953 21.0119C27.4926 22.0145 26.1596 22.5667 24.7417 22.5667C23.3237 22.5667 21.9907 22.0145 20.988 21.0119C19.9854 20.0092 19.4332 18.6762 19.4332 17.2583C19.4332 15.8403 19.9854 14.5073 20.988 13.5046V13.5046Z"></path><path d="M22.752 20.3688C23.257 20.6991 23.6286 20.8318 24.0839 20.8794V21.1766C24.0839 21.5174 24.36 21.7936 24.7009 21.7936C25.0417 21.7936 25.3178 21.5174 25.3178 21.1766V20.8193C26.2469 20.5642 26.8421 19.7625 26.9751 18.9714C27.1492 17.9351 26.587 16.9988 25.5758 16.6413C25.0066 16.4401 24.377 16.197 24.0232 15.9195C23.9075 15.8287 23.859 15.6301 23.8998 15.4136C23.941 15.1952 24.0877 14.9311 24.3761 14.8441C25.0483 14.6416 25.4914 14.9882 25.5398 15.0284C25.8019 15.2462 26.1908 15.2105 26.4087 14.9486C26.6265 14.6866 26.5908 14.2976 26.3288 14.0797C26.2297 13.9973 25.8675 13.7232 25.3178 13.6033V13.3396C25.3178 12.9989 25.0417 12.7227 24.7009 12.7227C24.36 12.7227 24.0839 12.9989 24.0839 13.3396V13.6449C24.0626 13.6508 24.0416 13.6562 24.0202 13.6627C23.3361 13.8688 22.8254 14.4521 22.6872 15.1851C22.5601 15.8595 22.7803 16.513 23.2616 16.8906C23.66 17.203 24.2113 17.4679 25.1646 17.8049C25.8081 18.0323 25.794 18.5534 25.7582 18.7669C25.6856 19.1985 25.3225 19.665 24.6968 19.6692C24.088 19.673 23.8966 19.643 23.4275 19.3362C23.1422 19.1496 22.7599 19.2296 22.5734 19.5148C22.3869 19.7999 22.4668 20.1823 22.752 20.3688V20.3688Z"></path></svg></div>
                            </div>
                            <p className="description">
                                {n.text.split(".").slice(0, 1).join("") + "."}
                            </p>
                            <p className="style-for-new3">{n.date}</p>
                        </div>
                    </div>
                ))}
        </div>
    );
};

export default Main;
